var fs = require("fs");
const path = require("path");
const extractSchema = require("./extract-schema");

module.exports = async function (opts) {
  let cwd = process.cwd();
  if (!path.isAbsolute(cwd)) {
    cwd = path.resolve(process.cwd(), cwd);
  }
  const entrypoint = path.resolve(cwd, opts.entrypoint);
  const allowedDependencies = opts.dependencies
    ? opts.dependencies.split(",")
    : [];
  const configSchema = extractSchema(entrypoint, allowedDependencies);
  const docString = generateDocFromSchema(configSchema);
  const docUrl =
    "https://wiki.openmrs.org/display/projects/openmrs-esm-module-config";
  const preamble =
    "See the [openmrs-esm-module-config docs](" +
    docUrl +
    ")\nfor information about how to provide configuration files.\n";
  appendOrReplaceDocstring(opts.outfile, preamble + docString);
};

function generateDocFromSchema(schema, keyPath = []) {
  let doc = "";
  for (let key of Object.keys(schema)) {
    const thisKeyPath = keyPath.concat([key]);
    const startStr = "\n" + "  ".repeat(keyPath.length) + "- ";
    if (schema[key].hasOwnProperty("default")) {
      const defaultStr = " (default: " + schema[key].default + ")";
      doc += startStr + key + defaultStr;
    } else {
      // recurse for nested keys
      doc += startStr + key;
      doc += generateDocFromSchema(schema[key], thisKeyPath);
    }
  }
  return doc;
}

function appendOrReplaceDocstring(outfile, docString) {
  const inputString = fs.readFileSync(outfile, "utf8");
  const outputString = updateReadmeString(inputString, docString);
  fs.writeFileSync(outfile, outputString);
}

function updateReadmeString(readme, docString) {
  const indicatorComment = "<!-- GENERATED BY OPENMRS CONFIG CLI -->";
  const indicatorClose = "<!-- END OF GENERATED -->";
  const regexp = new RegExp(indicatorComment + "[\\s\\S]*" + indicatorClose);
  const newContent =
    indicatorComment + "\n" + docString + "\n" + indicatorClose;
  if (readme.match(regexp)) {
    readme = readme.replace(regexp, newContent);
  } else {
    const header = "\n\n## Configuration\n";
    readme += header + newContent;
  }
  return readme;
}
